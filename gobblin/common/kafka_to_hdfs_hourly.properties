# Common properties for a kafka-to-hdfs_hourly_partitioned job
# Data is expected be either timestamped in kafka or json

# TODO: DRY this with Airflow and/or puppet.
kafka.brokers=kafka-jumbo1007.eqiad.wmnet:9093,kafka-jumbo1008.eqiad.wmnet:9093,kafka-jumbo1009.eqiad.wmnet:9093,kafka-jumbo1010.eqiad.wmnet:9093,kafka-jumbo1011.eqiad.wmnet:9093,kafka-jumbo1012.eqiad.wmnet:9093,kafka-jumbo1013.eqiad.wmnet:9093,kafka-jumbo1014.eqiad.wmnet:9093,kafka-jumbo1015.eqiad.wmnet:9093

source.class=org.wikimedia.gobblin.kafka.Kafka1TimestampedRecordSource
kafka.accepted.timestamps=CreateTime
gobblin.kafka.consumerClient.class=org.apache.gobblin.kafka.client.Kafka1ConsumerClient$Factory
source.kafka.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

source.kafka.security.protocol=SSL
source.kafka.ssl.cipher.suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
source.kafka.ssl.truststore.location=/etc/ssl/localcerts/wmf-java-cacerts
source.kafka.ssl.truststore.password=changeit

# Grow kafka fetch timeout from 1s to 5s to try to minimize
# occurences of tasks not gathering data due to this timeout
# See https://phabricator.wikimedia.org/T290723
source.kafka.fetchTimeoutMillis=5000

writer.builder.class=org.wikimedia.gobblin.writer.TimestampedStringRecordDataWriterBuilder
simple.writer.delimiter=\n
writer.file.path.type=tablename
writer.destination.type=HDFS
writer.output.format=txt
writer.codec.type=gz
writer.partition.timezone=UTC

writer.partitioner.class=org.wikimedia.gobblin.writer.partitioner.TimestampedRecordOrJsonStringTimeBasedWriterPartitioner
# We keep padded hours for alphabetiacal order to match time-order
# This is needed by gobblin to publish _IMPORTED flags
writer.partition.pattern=\'year=\'yyyy\'/month=\'MM\'/day=\'dd\'/hour=\'HH

data.publisher.type=org.wikimedia.gobblin.publisher.TimePartitionedDataPublisherWithFlag

metrics.reporting.file.enabled=true

# Enable metric reporting to Prometheus via Prometheus PushGateway.
metrics.reporting.custom.builders=org.wikimedia.gobblin.metrics.prometheus.PrometheusEventReporterFactory
metrics.reporting.prometheus.pushgateway.url=prometheus-pushgateway.discovery.wmnet
