-- This query generates the commons_pageviews_by_category dataset
-- described in https://docs.google.com/document/d/1AyorlFViHL2hj_6Sss4NRmKeqkk6XiV-EFb8uqyhla0
-- It needs the data generated by category_and_media_with_usage_map.hql
--
-- Parameters:
--     category_and_media_with_usage_map_table         -- Read data from here
--     mediawiki_page_table                            -- Read data from here
--     commons_pageviews_by_category_table             -- Insert results here
--     snapshot                                        -- YYYY-MM to compute for
--     coalesce_partitions                             -- Number of partitions to write
--
-- Usage:
--     spark3-sql -f commons_pageviews_by_category.hql \
--                -d category_and_media_with_usage_map_table=tmp.category_and_media_with_usage_map \
--                -d mediawiki_page_table=wmf_raw.mediawiki_page \
--                -d commons_pageviews_by_category_table=wmf_contributors.commons_pageviews_by_category \
--                -d snapshot=2024-02 \
--                -d coalesce_partitions=4

-- Clear old results for the same snapshot if necessary.
DELETE
FROM ${commons_pageviews_by_category_table}
WHERE month = '${snapshot}';

-- Explode category_and_media_with_usage_map to contain 1 row for each wiki and page_title.
WITH category_and_media_with_exploded_usage_map AS (
    SELECT parent_categories,
           primary_categories,
           ancestor_categories,
           wiki,
           EXPLODE(page_title_and_count) AS (page_title, pageview_count)
    FROM (
             SELECT parent_categories,
                    primary_categories,
                    ancestor_categories,
                    EXPLODE(usage_map) AS (wiki, page_title_and_count)
             FROM ${category_and_media_with_usage_map_table}
             WHERE page_type = 'file'
               AND usage_map IS NOT NULL)),

-- Transform the list of primary category ids to a list of primary category titles.
     exploded_category_and_media_with_primary_category_titles AS (
         SELECT ex.parent_categories,
                COLLECT_SET(mp.page_title) AS primary_categories,
                ex.ancestor_categories,
                ex.wiki,
                ex.page_title,
                ex.pageview_count
         FROM (
                  SELECT parent_categories,
                         EXPLODE(primary_categories) AS primary_category_id,
                         ancestor_categories,
                         wiki,
                         page_title,
                         pageview_count
                  FROM category_and_media_with_exploded_usage_map) AS ex
                  JOIN ${mediawiki_page_table} AS mp
                       ON (ex.primary_category_id = mp.page_id)
         WHERE mp.wiki_db = 'commonswiki'
           AND mp.snapshot = '${snapshot}'
         GROUP BY ex.parent_categories,
                  ex.ancestor_categories,
                  ex.wiki,
                  ex.page_title,
                  ex.pageview_count),

-- Explode again to generate the rows for shallow pageview counts.
     exploded_for_shallow_pageview_counts AS (
         SELECT EXPLODE(parent_categories) AS category_page_id,
                'shallow'                  AS category_scope,
                primary_categories,
                wiki,
                page_title,
                pageview_count
         FROM exploded_category_and_media_with_primary_category_titles),

-- In parallel, explode to generate the rows for deep pageview counts.
     exploded_for_deep_pageview_counts AS (
         SELECT category_page_id,
                'deep'              AS category_scope,
                primary_categories,
                wiki,
                page_title,
                SUM(pageview_count) AS pageview_count
         FROM (
                  SELECT EXPLODE(ancestor_categories) AS category_page_id,
                         primary_categories,
                         wiki,
                         page_title,
                         pageview_count
                  FROM exploded_category_and_media_with_primary_category_titles) AS ex
         GROUP BY category_page_id,
                  primary_categories,
                  wiki,
                  page_title),

-- Union both shallow and deep data.
     exploded_for_all_pageview_counts AS (
         SELECT *
         FROM exploded_for_shallow_pageview_counts
         UNION
         SELECT *
         FROM exploded_for_deep_pageview_counts),

-- Join it again with mediawiki page to get the category titles.
     full_dataset_with_category_name_and_month AS (
         SELECT DISTINCT mp.page_title AS category,
                         ex.category_scope,
                         ex.primary_categories,
                         ex.wiki,
                         ex.page_title,
                         ex.pageview_count,
                         '${snapshot}' AS month
         FROM exploded_for_all_pageview_counts AS ex
                  LEFT JOIN ${mediawiki_page_table} AS mp
                            ON (ex.category_page_id = mp.page_id)
         WHERE mp.wiki_db = 'commonswiki'
           AND mp.snapshot = '${snapshot}')

-- Write results.
INSERT
INTO ${commons_pageviews_by_category_table}
SELECT /*+ COALESCE(${coalesce_partitions}) */
       *
FROM full_dataset_with_category_name_and_month
;
