# Configures a coordinator to generate a day of banner activity
# data with minutely resolution and load it in druid.
# Any of the following properties are override-able with -D.
# Usage:
# oozie job --oozie $OOZIE_URL \
#  -Drefinery_directory=hdfs://analytics-hadoop$(hdfs dfs -ls -d /wmf/refinery/$(date +%Y)* | tail -n 1 | awk '{print $NF}') \
#  -Dqueue_name=production \
#  -Doozie_launcher_queue_name=production \
#  -Dstart_time=2019-07-25T00:00Z \
#  -config /srv/deployment/analytics/refinery/oozie/banner_activity/druid/daily/coordinator.properties \
#  -run

#
# NOTE:  The $refinery_directory must be synced to HDFS so that all relevant
#        .xml files exist there when this job is submitted.

name_node                         = hdfs://analytics-hadoop
job_tracker                       = resourcemanager.analytics.eqiad.wmnet:8032
queue_name                        = default
hive_principal                    = hive/analytics-hive.eqiad.wmnet@WIKIMEDIA
hive2_jdbc_url                    = jdbc:hive2://analytics-hive.eqiad.wmnet:10000/default

#Default user
user                              = analytics

# Base path in HDFS to refinery.
# When submitting this job for production, you should override this to point directly at a deployed
# directory name, and not the 'symbolic' 'current' directory. E.g. /wmf/refinery/2015-01-05T17.59.18Z--7bb7f07
refinery_directory                = ${name_node}/wmf/refinery/current

# Base path in HDFS to oozie files.
# Other files will be used relative to this path.
oozie_directory                   = ${refinery_directory}/oozie

# HDFS path to the hive-site.xml file to use
hive_site_xml                     = ${name_node}/user/hive/hive-site.xml

# HDFS path to coordinator to run.
coordinator_file                  = ${oozie_directory}/banner_activity/druid/daily/coordinator.xml
# HDFS path to workflow to run.
workflow_file                     = ${oozie_directory}/banner_activity/druid/daily/workflow.xml

# HDFS path to webrequest dataset definitions
webrequest_datasets_file          = ${oozie_directory}/webrequest/datasets.xml
webrequest_data_directory         = ${name_node}/wmf/data/wmf/webrequest
# Webrequest table name
webrequest_table                  = wmf.webrequest

# HDFS path to druid banner_activity dataset definitions
banner_activity_datasets_file     = ${oozie_directory}/banner_activity/druid/datasets.xml
banner_activity_directory         = ${name_node}/wmf/data/wmf/banner_activity

# Initial import time (since development of this job)
start_time                        = 2016-12-01T00:00Z

# Time to stop running this coordinator.  Year 3000 == never!
stop_time                         = 3000-01-01T00:00Z

# Temporary directory
temporary_directory               = ${name_node}/wmf/tmp/druid

# HDFS path to template to use.
druid_template_file               = ${oozie_directory}/banner_activity/druid/daily/load_banner_activity.json.template
# Druid overlord url
druid_overlord_url                = http://an-druid1001.eqiad.wmnet:8090
# Druid datasource to index into
druid_datasource                  = banner_activity_minutely

# HDFS path to workflow to load druid
load_druid_workflow_file          = ${oozie_directory}/util/druid/load/workflow.xml
# HDFS path to workflow to mark a directory as done
mark_directory_done_workflow_file = ${oozie_directory}/util/mark_directory_done/workflow.xml
# Workflow to send an error email
send_error_email_workflow_file    = ${oozie_directory}/util/send_error_email/workflow.xml

# SLA email to make sure we receive email if the job timeouts
sla_alert_contact                 = analytics-alerts@wikimedia.org

# Coordinator to start.
oozie.coord.application.path      = ${coordinator_file}
oozie.use.system.libpath          = true
oozie.action.external.stats.write = true
