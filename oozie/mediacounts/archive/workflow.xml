<?xml version="1.0" encoding="UTF-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.4"
    name="mediacounts-archive-wf-${year}-${month}-${day}">

    <parameters>

        <property>
            <name>extra_filter</name>
            <value>none</value>
            <description>
                Additional filter to apply when selecting data from the
                mediacounts table.
                To have no extra_filter, use the default of 'none'.
            </description>
        </property>
        <property>
            <name>compression_ending</name>
            <value>.bz2</value>
            <description>The filename ending for archive file.</description>
        </property>
        <property>
            <name>format_version</name>
            <value>0</value>
            <description>
                Version number for the output format. Increase this number, if
                you change the output format or meaning of the columns.
            </description>
        </property>

        <!-- Default values for inner oozie settings -->
        <property>
            <name>oozie_launcher_queue_name</name>
            <value>${queue_name}</value>
        </property>
        <property>
            <name>oozie_launcher_memory</name>
            <value>2048</value>
        </property>

        <!-- Required properties. -->
        <property><name>queue_name</name></property>
        <property><name>name_node</name></property>
        <property><name>job_tracker</name></property>
        <property><name>hive_principal</name></property>
        <property><name>hive2_jdbc_url</name></property>

        <property>
            <name>hive_site_xml</name>
            <description>hive-site.xml file path in HDFS</description>
        </property>
        <property>
            <name>mediacounts_table</name>
            <description>
                Hive table to read mediacounts data from.
            </description>
        </property>
        <property>
            <name>year</name>
            <description>The partition's year</description>
        </property>
        <property>
            <name>month</name>
            <description>The partition's month</description>
        </property>
        <property>
            <name>day</name>
            <description>The partition's day</description>
        </property>
        <property>
            <name>mark_directory_done_workflow_file</name>
            <description>Workflow for marking a directory done</description>
        </property>
        <property>
            <name>temporary_directory</name>
            <description>A directory in HDFS for temporary files</description>
        </property>
        <property>
            <name>mediacounts_daily_archive_directory</name>
            <description>Directory to archive the workflow output to</description>
        </property>
        <property>
            <name>archive_job_output_workflow_file</name>
            <description>Workflow to move a data file to the archive</description>
        </property>
        <property>
            <name>send_error_email_workflow_file</name>
            <description>Workflow for sending an email</description>
        </property>
    </parameters>

    <credentials>
        <credential name="hive2-cred" type="hive2">
            <property>
                <name>hive2.server.principal</name>
                <value>${hive_principal}</value>
            </property>
            <property>
               <name>hive2.jdbc.url</name>
               <value>${hive2_jdbc_url}</value>
            </property>
        </credential>
    </credentials>


    <start to="extract_data_into_single_file"/>

    <action name="extract_data_into_single_file" cred="hive2-cred">
        <hive2 xmlns="uri:oozie:hive2-action:0.2">
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <job-xml>${hive_site_xml}</job-xml>
            <configuration>
                <!--make sure oozie:launcher runs in a low priority queue -->
                <property>
                    <name>oozie.launcher.mapred.job.queue.name</name>
                    <value>${oozie_launcher_queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.memory.mb</name>
                    <value>${oozie_launcher_memory}</value>
                </property>
                <!--Let hive decide on the number of reducers -->
                <property>
                    <name>mapred.reduce.tasks</name>
                    <value>-1</value>
                </property>
            </configuration>
            <jdbc-url>${hive2_jdbc_url}</jdbc-url>
            <script>archive_mediacounts.hql</script>

            <!-- Query parameters -->
            <param>source_table=${mediacounts_table}</param>
            <param>destination_directory=${temporary_directory}/mediacounts-${year}-${month}-${day}-${wf:id()}</param>
            <param>year=${year}</param>
            <param>month=${month}</param>
            <param>day=${day}</param>

            <!-- Beeline arguments -->
            <argument>--verbose</argument>
            <argument>--hiveconf</argument>
            <argument>mapreduce.job.queuename=${queue_name}</argument>
        </hive2>
        <ok to="mark_dataset_done"/>
        <error to="send_error_email"/>
    </action>

    <action name="mark_dataset_done">
        <sub-workflow>
            <app-path>${mark_directory_done_workflow_file}</app-path>
            <configuration>
                <property>
                    <name>directory</name>
                    <value>${temporary_directory}/mediacounts-${year}-${month}-${day}-${wf:id()}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="move_data_to_archive"/>
        <error to="send_error_email"/>
    </action>

    <action name="move_data_to_archive">
        <sub-workflow>
            <app-path>${archive_job_output_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>source_directory</name>
                    <value>${temporary_directory}/mediacounts-${year}-${month}-${day}-${wf:id()}</value>
                </property>
                <property>
                    <name>expected_filename_ending</name>
                    <value>${compression_ending}</value>
                </property>
                <property>
                    <name>archive_file</name>
                    <value>${mediacounts_daily_archive_directory}/${year}/mediacounts.${year}-${month}-${day}.v${format_version lt 10 ? "0" : ""}${format_version}.tsv${compression_ending eq 'EMPTY' ? '' : compression_ending}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="chmod_yearly_archive_directory"/>
        <error to="send_error_email"/>
    </action>

    <action name="chmod_yearly_archive_directory">
        <fs>
            <!--
            We need newly created year directories to be group writeable so @ezachte
            can create top1000 files.  T185419
            -->
            <chmod path="${mediacounts_daily_archive_directory}/${year}" permissions="775" />
        </fs>
        <ok to="end"/>
        <error to="send_error_email"/>
    </action>

    <action name="send_error_email">
        <sub-workflow>
            <app-path>${send_error_email_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>parent_name</name>
                    <value>${wf:name()}</value>
                </property>
                <property>
                    <name>parent_failed_action</name>
                    <value>${wf:lastErrorNode()}</value>
                </property>
                <property>
                    <name>parent_error_code</name>
                    <value>${wf:errorCode(wf:lastErrorNode())}</value>
                </property>
                <property>
                    <name>parent_error_message</name>
                    <value>${wf:errorMessage(wf:lastErrorNode())}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="kill"/>
        <error to="kill"/>
    </action>

    <kill name="kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
