# TODO Deprecated, this job has been migrated to Airflow.

# Configures a coordinator to automatically generate monthly clickstream datasets.
# Any of the following properties are override-able with -D.
# Usage:
# sudo -u analytics oozie job --oozie $OOZIE_URL \
#   -Dstart_time='2019-04-01T00:00Z' \
#   -config oozie/clickstream/coordinator.properties \
#   -run
#
# NOTE:  The $oozie_directory must be synced to HDFS so that all relevant
#        .xml files exist there when this job is submitted.

name_node                         = hdfs://analytics-hadoop
job_tracker                       = resourcemanager.analytics.eqiad.wmnet:8032
hive_principal                    = hive/analytics-hive.eqiad.wmnet@WIKIMEDIA
hive_metastore_uri                = thrift://analytics-hive.eqiad.wmnet:9083
queue_name                        = default

#Default user
user                              = analytics

# Base path in HDFS to refinery.
# When submitting this job for production, you should override this to point directly at a deployed
# directory name, and not the 'symbolic' 'current' directory. E.g. /wmf/refinery/2015-01-05T17.59.18Z--7bb7f07
refinery_directory                = ${name_node}/wmf/refinery/current

# HDFS path to artifacts that will be used by this job.
# E.g. refinery-job.jar should exist here.
artifacts_directory               = ${refinery_directory}/artifacts

# Base path in HDFS to oozie files.
# Other files will be used relative to this path.
oozie_directory                   = ${refinery_directory}/oozie

# HDFS path to coordinator to run.
coordinator_file                  = ${oozie_directory}/clickstream/coordinator.xml

# HDFS path to workflow to run.
workflow_file                     = ${oozie_directory}/clickstream/workflow.xml

# pageview-actor definitions
pageview_datasets_file            = ${oozie_directory}/pageview/datasets.xml
pageview_data_directory           = ${name_node}/wmf/data/wmf/pageview
pageview_actor_table              = wmf.pageview_actor

# mediawiki raw definitions
mw_raw_datasets_file              = ${oozie_directory}/mediawiki/history/datasets_raw.xml
mw_raw_directory                  = ${name_node}/wmf/data/raw/mediawiki
mw_project_namespace_map_table    = wmf_raw.mediawiki_project_namespace_map
mw_page_table                     = wmf_raw.mediawiki_page
mw_pagelinks_table                = wmf_raw.mediawiki_pagelinks
mw_redirect_table                 = wmf_raw.mediawiki_redirect


# Initial import time of the dataset.
start_time                        = 2017-10-01T00:00Z

# Time to stop running this coordinator.  Year 3000 == never!
stop_time                         = 3000-01-01T00:00Z

# Spark job parameters
oozie_spark_lib                   = spark-2.4.4
spark_master                      = yarn
spark_deploy                      = cluster
spark_assembly_zip                = ${name_node}/user/spark/share/lib/spark2-assembly.zip
spark_app_jar                     = ${artifacts_directory}/org/wikimedia/analytics/refinery/refinery-job-0.0.130.jar
spark_app_class                   = org.wikimedia.analytics.refinery.job.ClickstreamBuilder
spark_app_name                    = ClickstreamBuilder
spark_executor_cores              = 4
spark_executor_memory             = 32G
spark_executor_memory_overhead    = 4096
spark_driver_memory               = 8G
spark_max_executors               = 32
clickstream_wikis                 = enwiki,ruwiki,dewiki,eswiki,jawiki,frwiki,zhwiki,itwiki,plwiki,ptwiki,fawiki
clickstream_minimum_links         = 10
temporary_directory               = ${name_node}/wmf/tmp/analytics
clickstream_archive_base_path     = ${name_node}/wmf/data/archive/clickstream


# Base path for loop workflow -- needed for loop to work
loop_workflow_base_path           = ${oozie_directory}/util/loop
# Worflow to loop over a list executing an oozie action
loop_workflow_file                = ${loop_workflow_base_path}/loop.xml
# Workflow wrapping the archive one to pass loop_value in path
loop_archive_wrapper_workflow_file= ${oozie_directory}/clickstream/loop_archive_wrapper.xml
# Workflow archiving a file
archive_job_output_workflow_file  = ${oozie_directory}/util/archive_job_output/workflow.xml
# Workflow to send an error email
send_error_email_workflow_file    = ${oozie_directory}/util/send_error_email/workflow.xml

# SLA email to make sure we receive email if the job timeouts
sla_alert_contact                 = analytics-alerts@wikimedia.org

# Coordinator to start.
oozie.coord.application.path      = ${coordinator_file}
oozie.use.system.libpath          = true
oozie.action.external.stats.write = true
