# Configures a coordinator to manage loading cassandra for the daily per-file
# pageview API.Any of the following properties are overidable with -D.
# Usage:
# sudo -u analytics oozie job --oozie $OOZIE_URL \
#   -Dstart_time='2019-12-04T00:00Z' \
#   -config oozie/cassandra/coord_mediarequest_per_file_daily.properties \
#   -run
#

name_node                         = hdfs://analytics-hadoop
job_tracker                       = resourcemanager.analytics.eqiad.wmnet:8032
hive_principal                    = hive/analytics-hive.eqiad.wmnet@WIKIMEDIA
hive2_jdbc_url                    = jdbc:hive2://analytics-hive.eqiad.wmnet:10000/default
queue_name                        = default

user                              = analytics

# Base path in HDFS to refinery.
# When submitting this job for production, you should
# override this to point directly at a deployed
# directory name, and not the 'symbolic' 'current' directory.
# E.g.  /wmf/refinery/2015-01-05T17.59.18Z--7bb7f07
refinery_directory                = ${name_node}/wmf/refinery/current

# HDFS path to artifacts that will be used by this job.
# E.g. refinery-hive.jar should exist here.
artifacts_directory               = ${refinery_directory}/artifacts

# Base path in HDFS to oozie files.
# Other files will be used relative to this path.
oozie_directory                   = ${refinery_directory}/oozie

# HDFS path to the refinery job jar that will be used by this job.
refinery_cassandra_jar_path       = ${artifacts_directory}/org/wikimedia/analytics/refinery/refinery-cassandra-0.1.1.jar
cassandra_reducer_class           = org.wikimedia.analytics.refinery.cassandra.ReducerToCassandra
cassandra_output_format_class     = org.wikimedia.analytics.refinery.cassandra.CqlOutputFormat

# Jar path that contains the UDF to generate country names.
refinery_hive_jar_path            = ${artifacts_directory}/org/wikimedia/analytics/refinery/refinery-hive-0.1.1.jar

# HDFS path to coordinators to run.
coordinator_file_hourly           = ${oozie_directory}/cassandra/hourly/coordinator.xml
coordinator_file_daily            = ${oozie_directory}/cassandra/daily/coordinator.xml
coordinator_file_monthly          = ${oozie_directory}/cassandra/monthly/coordinator.xml

# HDFS path to workflows to run.
workflow_file_hourly              = ${oozie_directory}/cassandra/hourly/workflow.xml
workflow_file_daily               = ${oozie_directory}/cassandra/daily/workflow.xml
workflow_file_monthly             = ${oozie_directory}/cassandra/monthly/workflow.xml

# Workflow to send an error email
send_error_email_workflow_file    = ${oozie_directory}/util/send_error_email/workflow.xml

# HDFS path to datasets definitions
pageview_datasets_file            = ${oozie_directory}/pageview/datasets.xml
projectview_datasets_file         = ${oozie_directory}/projectview/datasets.xml
mediarequest_datasets_file        = ${oozie_directory}/mediarequest/datasets.xml
pageview_data_directory           = ${name_node}/wmf/data/wmf/pageview
projectview_data_directory        = ${name_node}/wmf/data/wmf/projectview
mediarequest_data_directory       = ${name_node}/wmf/data/wmf/mediarequest
dataset_freq                      = hour
delay                             = 1

# Initial import time of the mediarequest dataset.
start_time                        = 2019-05-17T00:00Z

# Time to stop running this coordinator.  Year 3000 == never!
stop_time                         = 3000-01-01T00:00Z

# HDFS path to hive-site.xml file.  This is needed to run hive actions.
hive_site_xml                     = ${name_node}/user/hive/hive-site.xml
# Temporary directory
temporary_directory               = ${name_node}/wmf/tmp/analytics

# Cassandra cluster info
cassandra_host                    = aqs1004-a.eqiad.wmnet
cassandra_port                    = 9042
cassandra_username                = aqsloader
cassandra_password                = cassandra
cassandra_nodes                   = 6
batch_size                        = 1024
cassandra_write_consistency       = LOCAL_QUORUM

# Hive value separator
hive_value_separator              = \\t
# Cassandra table to be loaded (not job dependant)
cassandra_table                   = data

# Constant field names and value to be loaded into cassandra
constant_output_domain_field      = _domain
constant_output_domain_value      = analytics.wikimedia.org,text
constant_output_granularity_field = granularity
constant_output_tid_field         = _tid
constant_output_tid_value         = 0,timeuuid

workflow_file                     = ${workflow_file_daily}
datasets_file                     = ${mediarequest_datasets_file}
dataset_name                      = mediarequest_hourly
hive_script                       = mediarequest_per_file.hql
source_table                      = wmf.mediarequest
cassandra_parallel_loaders        = 6
cassandra_keyspace                = local_group_default_T_mediarequest_per_file
cassandra_cql                     = UPDATE "${cassandra_keyspace}"."data" SET "spider" = ?, "user" = ?
hive_fields                       = referer,file_path,timestamp,spider,user
hive_fields_types                 = text,text,text,int_nullable,int_nullable
cassandra_fields                  = spider,user
cassandra_primary_keys            = _domain,referer,file_path,granularity,timestamp,_tid

# Cassandra3 loading with spark
hive_metastore_uri                = thrift://analytics-hive.eqiad.wmnet:9083
oozie_spark_lib                   = spark-2.4.4
spark_master                      = yarn
spark_deploy                      = cluster
spark_job_name                    = cassandra3-local_group_default_T_mediarequest_per_file-daily
spark_job_class                   = org.wikimedia.analytics.refinery.job.HiveToCassandra
spark_job_jar                     = ${artifacts_directory}/org/wikimedia/analytics/refinery/refinery-job-0.1.17.jar
spark_assembly_zip                = ${name_node}/user/spark/share/lib/spark2-assembly.zip
spark_executor_memory             = 8G
spark_executor_cores              = 4
spark_driver_memory               = 4G
spark_max_executors               = 32
cassandra3_host                   = aqs1010-a.eqiad.wmnet:9042
cassandra3_username               = aqsloader
cassandra3_password               = cassandra
cassandra3_columns                = _domain,referer,file_path,granularity,timestamp,_tid,spider,user

################################## BEGINNING OF QUERY
# Using \ as last character makes the property being multi-line (beware of trailing spaces!)
# Using _YEAR_, _MONTH_ and _DAY_ values to be replaced by actual values
# Need to escape \ char 4 times (!!!) due to the multiple systems the string passes through

cassandra3_hql                    = WITH per_referer AS ( \
    SELECT \
        'analytics.wikimedia.org' as _domain, \
        IF(referer = 'external (search engine)', 'search-engine', referer) as referer, \
        regexp_replace(base_name, '\\\\t', '') as file_path, \
        'daily' as granularity, \
        CONCAT(LPAD(year, 4, '0'), LPAD(month, 2, '0'), LPAD(day, 2, '0'), '00') as `timestamp`, \
        '13814000-1dd2-11b2-8080-808080808080' as _tid, \
        SUM( IF (COALESCE(agent_type, 'all-agents') = 'spider', request_count, 0)) as spider, \
        SUM( IF (COALESCE(agent_type, 'all-agents') = 'user', request_count, 0)) as `user` \
    FROM \
        wmf.mediarequest \
    WHERE \
        year = _YEAR_ \
        AND month = _MONTH_ \
        AND day = _DAY_ \
    GROUP BY \
        referer, \
        regexp_replace(base_name, '\\\\t', ''), \
        year, \
        month, \
        day \
), all_referers AS ( \
    SELECT \
        'analytics.wikimedia.org' as _domain, \
        'all-referers' as referer, \
        regexp_replace(base_name, '\\\\t', '') as file_path, \
        'daily' as granularity, \
        CONCAT(LPAD(year, 4, '0'), LPAD(month, 2, '0'), LPAD(day, 2, '0'), '00') as `timestamp`, \
        '13814000-1dd2-11b2-8080-808080808080' as _tid, \
        SUM( IF (COALESCE(agent_type, 'all-agents') = 'spider', request_count, 0)) as spider, \
        SUM( IF (COALESCE(agent_type, 'all-agents') = 'user', request_count, 0)) as `user` \
    FROM \
        wmf.mediarequest \
    WHERE \
        year = _YEAR_ \
        AND month = _MONTH_ \
        AND day = _DAY_ \
    GROUP BY \
        regexp_replace(base_name, '\\\\t', ''), \
        year, \
        month, \
        day \
) \
SELECT * FROM per_referer \
UNION ALL \
SELECT * FROM all_referers

######################### END OF QUERY

# SLA email to make sure we receive email if the job timeouts
sla_alert_contact                 = analytics-alerts@wikimedia.org

# Coordintator to start.
oozie.coord.application.path      = ${coordinator_file_daily}
oozie.use.system.libpath          = true
oozie.action.external.stats.write = true
