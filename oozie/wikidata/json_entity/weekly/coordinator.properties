# Configures a coordinator to generate parquet from wikidata JSON dump every week
# and add hive partitions accordingly.
#
# Any of the following properties are override-able with -D.
# Usage:
#   oozie job -Dstart_time=2017-03-01T00:00Z -submit -config oozie/wikidata/json_entity/weekly/coordinator.properties
#
# NOTE:  The $refinery_directory must be synced to HDFS so that all relevant
#        .xml files exist there when this job is submitted.

name_node                         = hdfs://analytics-hadoop
job_tracker                       = resourcemanager.analytics.eqiad.wmnet:8032
queue_name                        = default
hive_principal                    = hive/analytics-hive.eqiad.wmnet@WIKIMEDIA
hive2_jdbc_url                    = jdbc:hive2://analytics-hive.eqiad.wmnet:10000/default
hive_metastore_uri                = thrift://analytics-hive.eqiad.wmnet:9083

#Default user
user                              = analytics

# Base path in HDFS to refinery.
# When submitting this job for production, you should override this to point directly at a deployed
# directory name, and not the 'symbolic' 'current' directory. E.g. /wmf/refinery/2015-01-05T17.59.18Z--7bb7f07
refinery_directory                = ${name_node}/wmf/refinery/current

# HDFS path to artifacts that will be used by this job.
# E.g. refinery-job.jar should exist here.
artifacts_directory               = ${refinery_directory}/artifacts

# Base path in HDFS to oozie files.
# Other files will be used relative to this path.
oozie_directory                   = ${refinery_directory}/oozie

# HDFS path to the hive-site.xml file to use
hive_site_xml                     = ${name_node}/user/hive/hive-site.xml

# HDFS path to coordinator to run.
coordinator_file                  = ${oozie_directory}/wikidata/json_entity/weekly/coordinator.xml

# HDFS path to workflow to run.
workflow_file                     = ${oozie_directory}/wikidata/json_entity/weekly/workflow.xml

# Initial import time of the mediawiki dataset.
# Not: the json-dumps are produced every two weeks on monday
start_time                        = 2020-01-06T00:00Z

# Time to stop running this coordinator.  Year 3000 == never!
stop_time                         = 3000-01-01T00:00Z

# HDFS path to mediawiki history datasets definitions
datasets_file                     = ${oozie_directory}/wikidata/datasets.xml
wikidata_data_directory           = ${name_node}/wmf/data/wmf/wikidata

# HDFS path to mediawiki history datasets definitions
datasets_raw_file                 = ${oozie_directory}/wikidata/datasets_raw.xml
wikidata_raw_data_directory       = ${name_node}/wmf/data/raw/wikidata

# wikidata_entity table name (for partitions repair)
wikidata_entity_table             = wmf.wikidata_entity

# Spark job parameters
oozie_spark_lib                   = spark-2.4.4
spark_master                      = yarn
spark_deploy                      = cluster
spark_assembly_zip                = ${name_node}/user/spark/share/lib/spark2-assembly.zip
spark_job_jar                     = ${artifacts_directory}/org/wikimedia/analytics/refinery/refinery-job-0.1.24-shaded.jar
spark_job_class                   = org.wikimedia.analytics.refinery.job.structureddata.jsonparse.JsonDumpConverter
spark_job_name                    = wikidata_json_converter
spark_executor_memory             = 32G
spark_executor_cores              = 4
spark_driver_memory               = 8G
spark_max_num_executors           = 32

wikidata_entity_parquet_partitions = 512

# Workflow to add a partition
add_partition_workflow_file       = ${oozie_directory}/util/hive/partition/add/workflow.xml
# HDFS path to workflow to mark a directory as done
mark_directory_done_workflow_file = ${oozie_directory}/util/mark_directory_done/workflow.xml
# HDFS path to workflow to send an error email
send_error_email_workflow_file    = ${oozie_directory}/util/send_error_email/workflow.xml

# email address to contact in case of SLA errors
sla_alert_contact                 = analytics-alerts@wikimedia.org

# Coordinator to start.
oozie.coord.application.path      = ${coordinator_file}
oozie.use.system.libpath          = true
oozie.action.external.stats.write = true
