<?xml version="1.0" encoding="UTF-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.4"
    name="wikidata-json_entity-weekly-wf-${snapshot}">

    <parameters>

        <!-- Allows changing spark version to be used by oozie -->
        <property>
            <name>oozie.action.sharelib.for.spark</name>
            <value>${oozie_spark_lib}</value>
        </property>

        <!-- Default values for inner oozie settings -->
        <property>
            <name>oozie_launcher_queue_name</name>
            <value>${queue_name}</value>
        </property>
        <property>
            <name>oozie_launcher_memory</name>
            <value>2048</value>
        </property>

        <!-- Required properties -->
        <property><name>name_node</name></property>
        <property><name>job_tracker</name></property>
        <property><name>queue_name</name></property>
        <property><name>hive_principal</name></property>
        <property><name>hive2_jdbc_url</name></property>
        <property><name>hive_metastore_uri</name></property>

        <property>
            <name>hive_site_xml</name>
            <description>hive-site.xml file path in HDFS</description>
        </property>
        <property>
            <name>spark_master</name>
            <description>Master to be used for Spark (yarn, local, other)</description>
        </property>
        <property>
            <name>spark_assembly_zip</name>
            <description>The spark assembly zip file on HDFS, preventing to repackage it everytime</description>
        </property>
        <property>
            <name>spark_job_jar</name>
            <description>Path to the jar to be used to run spark job</description>
        </property>
        <property>
            <name>spark_job_class</name>
            <description>Class of the spark job to be run</description>
        </property>
        <property>
            <name>spark_executor_memory</name>
            <description>Memory to allocate for each spark executor</description>
        </property>
        <property>
            <name>spark_executor_cores</name>
            <description>Number of cores to allocate for each spark executor</description>
        </property>
        <property>
            <name>spark_driver_memory</name>
            <description>Memory to allocate for spark driver process</description>
        </property>
        <property>
            <name>spark_max_num_executors</name>
            <description>Maximum number of concurrent executors for spark with dynamic allocation</description>
        </property>

        <property>
            <name>wikidata_entity_table</name>
            <description>The wikidata_entity table in hive to repair</description>
        </property>

        <property>
            <name>snapshot</name>
            <description>The weekly snapshot currently worked (YYYY-MM-DD format)</description>
        </property>
        <property>
            <name>wikidata_json_dumps_location</name>
            <description>The path of the wikidata json dumps to convert to parquet</description>
        </property>
        <property>
            <name>wikidata_entity_parquet_location</name>
            <description>The path of the generated wikidata_entity parquet files</description>
        </property>
        <property>
            <name>wikidata_entity_parquet_partitions</name>
            <description>Number of parquet files to write</description>
        </property>

        <!-- Subworkflows -->
        <property>
            <name>add_partition_workflow_file</name>
            <description>Workflow definition for adding a partition</description>
        </property>
        <property>
            <name>mark_directory_done_workflow_file</name>
            <description>Workflow for marking a directory done</description>
        </property>
        <property>
            <name>send_error_email_workflow_file</name>
            <description>Workflow for sending an email</description>
        </property>

    </parameters>

    <credentials>
        <credential name="hcat-cred" type="hcat">
            <property>
                <name>hcat.metastore.principal</name>
                <value>${hive_principal}</value>
            </property>
            <property>
               <name>hcat.metastore.uri</name>
               <value>${hive_metastore_uri}</value>
            </property>
        </credential>
    </credentials>


    <start to="convert_json_to_hive"/>

    <action name="convert_json_to_hive" cred="hcat-cred">
        <spark xmlns="uri:oozie:spark-action:0.1">
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <configuration>
                <!--make sure oozie:launcher runs in a low priority queue -->
                <property>
                    <name>oozie.launcher.mapred.job.queue.name</name>
                    <value>${oozie_launcher_queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.memory.mb</name>
                    <value>${oozie_launcher_memory}</value>
                </property>
            </configuration>
            <master>${spark_master}</master>
            <mode>${spark_deploy}</mode>
            <name>${spark_job_name}-${snapshot}</name>
            <class>${spark_job_class}</class>
            <jar>${spark_job_jar}</jar>
            <spark-opts>--executor-memory ${spark_executor_memory} --executor-cores ${spark_executor_cores} --driver-memory ${spark_driver_memory} --queue ${queue_name} --conf spark.dynamicAllocation.maxExecutors=${spark_max_num_executors}</spark-opts>
            <arg>--json-dump-path</arg>
            <arg>${wikidata_json_dumps_location}</arg>
            <arg>--output-table</arg>
            <arg>${wikidata_entity_table}</arg>
            <arg>--snapshot</arg>
            <arg>${snapshot}</arg>
            <arg>--num-partitions</arg>
            <arg>${wikidata_entity_parquet_partitions}</arg>
            <arg>--project-type</arg>
            <arg>wikidata</arg>
        </spark>
        <ok to="mark_wikidata_entity_hive_done" />
        <error to="send_error_email" />
    </action>

    <action name="mark_wikidata_entity_hive_done">
        <sub-workflow>
            <app-path>${mark_directory_done_workflow_file}</app-path>
            <configuration>
                <property>
                    <name>directory</name>
                    <value>${wikidata_entity_parquet_location}</value>
                </property>
                <property>
                    <name>done_file</name>
                    <value>_PARTITIONED</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="end"/>
        <error to="send_error_email"/>
    </action>

    <action name="send_error_email">
        <sub-workflow>
            <app-path>${send_error_email_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>parent_name</name>
                    <value>${wf:name()}</value>
                </property>
                <property>
                    <name>parent_failed_action</name>
                    <value>${wf:lastErrorNode()}</value>
                </property>
                <property>
                    <name>parent_error_code</name>
                    <value>${wf:errorCode(wf:lastErrorNode())}</value>
                </property>
                <property>
                    <name>parent_error_message</name>
                    <value>${wf:errorMessage(wf:lastErrorNode())}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="kill"/>
        <error to="kill"/>
    </action>

    <kill name="kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
