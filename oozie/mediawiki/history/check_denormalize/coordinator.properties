# Configures a coordinator to automatically check denormalize snapshot against previously
# generated one, using hive queries.
#
# WARNING: The 3 hive queries write errors (if any) in the same table.
#          An explicit cleaning step is taken before running the queries
#          to prevent not-erasing previous data in case of rerun.
#
# Usage:
# sudo -u analytics oozie job --oozie $OOZIE_URL \
#   -Dstart_time='2019-05-01T00:00Z' \
#   -Dsuccess_email_to='product-analytics@wikimedia.org,analytics-alerts@wikimedia.org' \
#   -config oozie/mediawiki/history/check_denormalize/coordinator.properties \
#   -run
#
# NOTE:  The $oozie_directory must be synced to HDFS so that all relevant
#        .xml files exist there when this job is submitted.


name_node                         = hdfs://analytics-hadoop
job_tracker                       = resourcemanager.analytics.eqiad.wmnet:8032
queue_name                        = default
hive_principal                    = hive/analytics-hive.eqiad.wmnet@WIKIMEDIA
hive2_jdbc_url                    = jdbc:hive2://analytics-hive.eqiad.wmnet:10000/default
hive_metastore_uri                = thrift://analytics-hive.eqiad.wmnet:9083

#Default user
user                              = analytics

# Base path in HDFS to refinery.
# When submitting this job for production, you should override this to point directly at a deployed
# directory name, and not the 'symbolic' 'current' directory. E.g. /wmf/refinery/2015-01-05T17.59.18Z--7bb7f07
refinery_directory                = ${name_node}/wmf/refinery/current

# HDFS path to artifacts that will be used by this job.
# E.g. refinery-job.jar should exist here.
artifacts_directory               = ${refinery_directory}/artifacts

# Base path in HDFS to oozie files.
# Other files will be used relative to this path.
oozie_directory                   = ${refinery_directory}/oozie

# HDFS path to the hive-site.xml file to use
hive_site_xml                     = ${name_node}/user/hive/hive-site.xml

# HDFS path to coordinator to run.
coordinator_file                  = ${oozie_directory}/mediawiki/history/check_denormalize/coordinator.xml

# HDFS path to workflow to run.
workflow_file                     = ${oozie_directory}/mediawiki/history/check_denormalize/workflow.xml

# HDFS path to hive-site.xml file.  This is needed to run hive actions.
hive_site_xml                     = ${name_node}/user/hive/hive-site.xml

# HDFS path to mediawiki history datasets definitions
datasets_file                     = ${oozie_directory}/mediawiki/history/datasets.xml
mw_directory                      = ${name_node}/wmf/data/wmf/mediawiki

# mw history tables
mw_user_history_table             = wmf.mediawiki_user_history
mw_page_history_table             = wmf.mediawiki_page_history
mw_denormalized_history_table     = wmf.mediawiki_history

# Initial import time of the mediawiki dataset.
start_time                        = 2018-06-01T00:00Z

# Time to stop running this coordinator.  Year 3000 == never!
stop_time                         = 3000-01-01T00:00Z

# Spark job parameters
oozie_spark_lib                   = spark-2.4.4
spark_master                      = yarn
spark_deploy                      = cluster
spark_assembly_zip                = ${name_node}/user/spark/share/lib/spark2-assembly.zip
spark_job_jar                     = ${artifacts_directory}/org/wikimedia/analytics/refinery/refinery-job-0.1.18-shaded.jar
spark_job_class                   = org.wikimedia.analytics.refinery.job.mediawikihistory.MediawikiHistoryChecker
spark_job_name                    = mediawiki_history_check
spark_executor_memory             = 16G
spark_executor_cores              = 2
spark_driver_memory               = 16G
spark_max_num_executors           = 80
spark_num_partitions              = 1024


# Checker Job configuration

## Number of wikis to check (by decreasing edit activity)
wikis_to_check                    = 50
# Minimum accepted value for any event-growth metrics
# Growth is expected, we accept a small decrease of until 1%
# Special case: page_redirect_count - As it is not stable in history
# bu construction (we only have the current value), we measure its
# variability, not it's grwth, so we use -max_events_growth as lower limit.
min_events_growth                 = -0.01
# Maximum accepted value for any event-difference-ratio metric
# Since we look at large-enough wikis, saccepted variability is 100%, not more
# (small wikis can exhibit very high variabilities)
max_events_growth                 = 1.0
# Maximum number of errors-rows ratio (per dataset, user, page or denorm)
# Only up to 5% of error rows is accepted
wrongs_rows_ratio                 = 0.05

# Workflow to add a partition
add_partition_workflow_file       = ${oozie_directory}/util/hive/partition/add/workflow.xml

# Workflow to mark a directory as done
mark_directory_done_workflow_file = ${oozie_directory}/util/mark_directory_done/workflow.xml

# Workflows to send emails. In order to avoid spam, specify the email to send success
# notifications to when initializing the job manually (see example at the beginning of this file)
send_error_email_workflow_file    = ${oozie_directory}/util/send_error_email/workflow.xml
send_success_email_workflow_file  = ${oozie_directory}/util/send_success_email/workflow.xml
success_email_to                  = product-analytics@wikimedia.org,analytics-alerts@wikimedia.org

# email address to contact in case of SLA errors
sla_alert_contact                 = analytics-alerts@wikimedia.org

# Coordinator to start.
oozie.coord.application.path      = ${coordinator_file}
oozie.use.system.libpath          = true
oozie.action.external.stats.write = true
